@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model GridPacientesViewModel
@{
    Layout = null;
    var canSeeCitas = (await AuthorizationService.AuthorizeAsync(User, "PacientesCitas")).Succeeded;
    var canSeeHistorial = (await AuthorizationService.AuthorizeAsync(User, "PacientesHistorial")).Succeeded;
}

@if (!Model.Pacientes.Any())
{
    <div class="alert alert-warning">No se han encontrado usuarios.</div>
}
else
{
    <input id="pageSize" type="hidden" value="@Model.PageSize" />
    <table class="table table-striped table-hover site-user-list">
        <thead>
            <tr>
                <th></th>
                <th>
                    Nº de historia
                </th>
                <th>
                    <a id="name">
                        Nombre Completo
                    </a>
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Pacientes)
            {
                <tr>
                    <td><img src="@GravatarHelper.GetImage(user.Email)" class="img-circle" /></td>
                    <td>@user.Id</td>
                    <td>@user.Name</td>                    
                    <td></td>
                    <td>
                        @if (canSeeHistorial)
                        {
                            <a asp-controller="Historial" asp-action="Index" asp-route-id="@user.Id" class="btn btn-sm btn-success">Historial</a>
                        }
                        <a id="details" class="btn btn-sm btn-primary" onclick="openDetailsForm('@Url.Action("Details")',@user.Id)">Detalles</a>
                        @if (canSeeCitas)
                        {
                            <a asp-action="Citas" asp-route-id="@user.Id" class="btn btn-sm btn-info">Citas</a>
                        }
                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">Editar</a>
                        <a class="btn btn-sm btn-danger" data-targetid="@user.Id" data-modal="#confirm-remove-paciente">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="modal fade site-modal-remove" id="confirm-remove-paciente" data-url="@Url.Action("Delete")">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Borrar paciente</h4>
                </div>
                <div class="modal-body">
                    <p>El paciente será borrado permanentemente.</p>
                    <p>¿Desea continuar?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-danger" data-dismiss="modal">Eliminar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade site-modal-details" id="details-paciente">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Detalles del paciente</h4>
                </div>
                <div class="modal-body" id="modal-detalles">
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Volver</button>
                </div>
            </div>
        </div>
    </div>

    @if (Model.TotalPacientes > Model.Pacientes.Count())
    {
        var lastPage = (int)Math.Ceiling((decimal)Model.TotalPacientes / Model.PageSize);

        <div class="row">
            <div class="col-md-offset-3">
                <button id="first" class="btn btn-primary"><span class="glyphicon glyphicon-step-backward"></span></button>
                <button id="prev" class="btn btn-primary"><span class="glyphicon glyphicon-chevron-left"></span></button>
                <span style="margin: 10px">Página @Model.Page de @lastPage</span>
                <button id="next" class="btn btn-primary"><span class="glyphicon glyphicon-chevron-right"></span></button>
                <button id="last" class="btn btn-primary"><span class="glyphicon glyphicon-step-forward"></span></button>
            </div>
        </div>
    }
}
<script type="text/javascript">
    activateModalActions();
        @{
        var last = (int)Math.Ceiling((decimal)Model.TotalPacientes / Model.PageSize);
    }
    $('#first').click(function () { getPacientesGrid('@Url.Action("GetPacientesGrid", "Pacientes")', $("#searchInput").val(), '@Model.Sort', '@Model.Ascending', '1', $("#pageSize").val()); });
    $('#prev').click(function () { getPacientesGrid('@Url.Action("GetPacientesGrid", "Pacientes")', $("#searchInput").val(),'@Model.Sort','@Model.Ascending', '@Math.Max(1, Model.Page - 1)', $("#pageSize").val()); });
    $('#next').click(function () { getPacientesGrid('@Url.Action("GetPacientesGrid", "Pacientes")', $("#searchInput").val(),'@Model.Sort','@Model.Ascending', '@Math.Min(last, Model.Page + 1)', $("#pageSize").val()); });
    $('#last').click(function () { getPacientesGrid('@Url.Action("GetPacientesGrid", "Pacientes")', $("#searchInput").val(), '@Model.Sort', '@Model.Ascending', '@last', $("#pageSize").val()); });
    $('#name').click(function () { getPacientesGrid('@Url.Action("GetPacientesGrid", "Pacientes")', $("#searchInput").val(), 'name', '@Model.InvertAscending', '@Model.Page', $("#pageSize").val()); });


</script>
